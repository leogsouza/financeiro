<?php

/**
 * This is the model base class for the table "tbl_categoria".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Categoria".
 *
 * Columns in table "tbl_categoria" available as properties of the model,
 * followed by relations of table "tbl_categoria" available as properties of the model.
 *
 * @property integer $id
 * @property string $nome
 * @property integer $lft
 * @property integer $rgt
 * @property integer $lvl
 * @property string $data_cadastro
 * @property string $data_alteracao
 *
 * @property Lancamento[] $lancamentos
 */
abstract class BaseCategoria extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_categoria';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Categoria|Categorias', $n);
	}

	public static function representingColumn() {
		return 'nome';
	}

	public function rules() {
		return array(
			array('nome', 'required'),
			array('lft, rgt, lvl', 'numerical', 'integerOnly'=>true),
			array('nome', 'length', 'max'=>45),
			array('data_cadastro, data_alteracao', 'safe'),
			array('lft, rgt, lvl, data_cadastro, data_alteracao', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, nome, lft, rgt, lvl, data_cadastro, data_alteracao', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'lancamentos' => array(self::HAS_MANY, 'Lancamento', 'categoria_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'nome' => Yii::t('app', 'Nome'),
			'lft' => Yii::t('app', 'Lft'),
			'rgt' => Yii::t('app', 'Rgt'),
			'lvl' => Yii::t('app', 'Lvl'),
			'data_cadastro' => Yii::t('app', 'Data Cadastro'),
			'data_alteracao' => Yii::t('app', 'Data Alteracao'),
			'lancamentos' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('nome', $this->nome, true);
		$criteria->compare('lft', $this->lft);
		$criteria->compare('rgt', $this->rgt);
		$criteria->compare('lvl', $this->lvl);
		$criteria->compare('data_cadastro', $this->data_cadastro, true);
		$criteria->compare('data_alteracao', $this->data_alteracao, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}